@namespace MeTube_DevOps.Client.Pages
@page "/managehistory"
@using MeTube_DevOps.Client.ViewModels
@using MeTube_DevOps.Client.Models
@using System.ComponentModel.DataAnnotations;
@inject AdminHistoryViewModel ViewModel

<h3>Manage History (Admin)</h3>

@* @if (ViewModel.IsLoading)
{
    <p><strong>Loading ...</strong></p>
}
else
{
    @if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
    {
        <div class="alert alert-danger">@ViewModel.ErrorMessage</div>
        <button class="btn btn-secondary" @onclick="ClearAllMessages">
            Back
        </button>
    }
    else if (!string.IsNullOrEmpty(ViewModel.InfoMessage))
    {
        <div class="alert alert-info">@ViewModel.InfoMessage</div>
        <button class="btn btn-secondary" @onclick="ClearAllMessages">
            OK
        </button>
    }
    else
    {
        <button class="btn btn-secondary mb-3"
                @onclick="ViewModel.LoadAllUsersAndVideosAsync">
            Load All Users & Videos
        </button>

        <!-- 1) Choose user -->
        <div class="mb-3">
            <label>Select User:</label>
            <select class="form-select"
                    @bind="ViewModel.SelectedUserId">
                <option value="0">-- Choose user --</option>
                @foreach (var usr in ViewModel.Users)
                {
                    <option value="@usr.Id">@usr.Username</option>
                }
            </select>

            <!-- Visa fel fÃ¶r UserId -->
            @if (ViewModel.EditingHistory.GetErrors(nameof(HistoryAdmin.UserId))
           is IEnumerable<ValidationResult> userIdErrors
           && userIdErrors.Any())
            {
                <ul class="text-danger">
                    @foreach (var err in userIdErrors)
                    {
                        <li>@err.ErrorMessage</li>
                    }
                </ul>
            }

            <button class="btn btn-primary mt-2" @onclick="ViewModel.LoadHistoriesAsync">
                Load Histories
            </button>
        </div>

        <!-- TABLE: Histories etc. -->
        @if (ViewModel.Histories.Any())
        {
            <table class="table table-hover mt-3">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>UserName</th>
                        <th>VideoTitle</th>
                        <th>DateWatched</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var history in ViewModel.Histories)
                    {
                        <tr>
                            <td>@history.Id</td>
                            <td>@history.UserName</td>
                            <td>@history.VideoTitle</td>
                            <td>@history.DateWatched.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>
                                <button class="btn btn-sm btn-warning"
                                        @onclick="() => ViewModel.EditHistory(history)">
                                    Edit
                                </button>
                                <button class="btn btn-sm btn-danger"
                                        @onclick="() => ViewModel.DeleteHistoryAsync(history)">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No history loaded yet, or the user has no history records.</p>
        }

        <hr />

        <!-- 3) Form for Create/Update -->
        <h5>@(ViewModel.EditingHistory.Id == 0 ? "Create New" : "Update") History</h5>

        <div class="row mb-2">
            <div class="col-md-4">
                <label>User:</label>
                <select class="form-select"
                        @bind="ViewModel.SelectedUserId">
                    <option value="0">-- Choose user --</option>
                    @foreach (var usr in ViewModel.Users)
                    {
                        <option value="@usr.Id">@usr.Username</option>
                    }
                </select>

                @if (ViewModel.EditingHistory.GetErrors(nameof(HistoryAdmin.UserId))
               is IEnumerable<ValidationResult> userErrors
               && userErrors.Any())
                {
                    <ul class="text-danger">
                        @foreach (var err in userErrors)
                        {
                            <li>@err.ErrorMessage</li>
                        }
                    </ul>
                }
            </div>

            <div class="col-md-4">
                <label>Video:</label>
                <select class="form-select"
                        @bind="ViewModel.SelectedVideoId">
                    <option value="0">-- Choose video --</option>
                    @foreach (var vid in ViewModel.Videos)
                    {
                        <option value="@vid.Id">@vid.Title</option>
                    }
                </select>

                @if (ViewModel.EditingHistory.GetErrors(nameof(HistoryAdmin.VideoId))
               is IEnumerable<ValidationResult> videoErrors
               && videoErrors.Any())
                {
                    <ul class="text-danger">
                        @foreach (var err in videoErrors)
                        {
                            <li>@err.ErrorMessage</li>
                        }
                    </ul>
                }
            </div>

            <div class="col-md-4">
                <label>DateWatched:</label>
                <input type="datetime-local"
                       class="form-control"
                       value="@ViewModel.EditingHistory.DateWatched.ToString("yyyy-MM-ddTHH:mm")"
                       @onchange="@(e => HandleDateChange(e))" />

                @if (ViewModel.EditingHistory.GetErrors(nameof(HistoryAdmin.DateWatched))
               is IEnumerable<ValidationResult> dateErrors
               && dateErrors.Any())
                {
                    <ul class="text-danger">
                        @foreach (var err in dateErrors)
                        {
                            <li>@err.ErrorMessage</li>
                        }
                    </ul>
                }
            </div>
        </div>

        <div>
            @if (ViewModel.EditingHistory.Id == 0)
            {
                <button class="btn btn-success" @onclick="ViewModel.CreateHistoryAsync">
                    Create
                </button>
            }
            else
            {
                <button class="btn btn-primary" @onclick="ViewModel.UpdateHistoryAsync">
                    Update
                </button>
            }
            <button class="btn btn-secondary ms-2" @onclick="ClearEditing">
                Clear
            </button>
        </div>
    }
}

@code {
    @* protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadAllUsersAndVideosAsync();
    }

    private void ClearEditing()
    {
        ViewModel.EditingHistory = new HistoryAdmin
            {
                DateWatched = DateTime.Now
            };
        ViewModel.SelectedUserId = 0;
        ViewModel.SelectedVideoId = 0;
    }

    private void ClearAllMessages()
    {
        ViewModel.ErrorMessage = string.Empty;
        ViewModel.InfoMessage = string.Empty;
    }

    private void HandleDateChange(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value?.ToString(), out DateTime newDate))
        {
            ViewModel.EditingHistory.DateWatched = newDate;
        }
    } *@

